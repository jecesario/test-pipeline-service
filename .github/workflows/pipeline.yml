# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build & Validation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar


    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=jecesario_test-pipeline-service

    - name: Sonar Build Breaker
      uses: jkumar19/sonar-build-breaker@v1.0.0
      with:
        sonar_url: "https://sonarcloud.io"
        sonar_branch: "main"
        sonar_token: ${{ secrets.SONAR_TOKEN }}
        project_key: "jecesario_test-pipeline-service"

  deploy-dev:
    name: Deploy Dev
    runs-on: ubuntu-latest
    needs: build
    environment: dev
    steps:
      - uses: actions/checkout@v3
      - name: Use Node 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy
        run: railway up
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_DEV }}
      
  deploy-uat:
    name: Deploy UAT
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment: uat
    steps:
      - uses: actions/checkout@v3
      - name: Use Node 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy
        run: railway up
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_UAT }}


  deploy-prod:
    name: Deploy PROD
    runs-on: ubuntu-latest
    needs: deploy-uat
    environment: prod
    steps:
      - uses: actions/checkout@v3
      - name: Use Node 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy
        run: railway up
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_PROD }}
